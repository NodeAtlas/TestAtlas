<h2 id="utilisation">Utilisation</h2><h3 id="-tape-1-installation">Étape 1 - Installation</h3><p>Installer <em>NodeAtlas</em> avec l&#39;une des deux méthodes suivantes :</p><ul>
<li><code>npm install node-atlas</code> recommandée pour une utilisation en tant qu&#39;API.</li>
<li><code>npm install -g node-atlas</code> recommandée pour une utilisation à la ligne de commande.</li>
</ul><h3 id="-tape-2-configuration">Étape 2 - Configuration</h3><p>Créer un fichier <code>webconfig.json</code> et ses fichiers de dépendances pour configurer votre site.</p><p><strong>website.json</strong> exemple pour le développement :</p><pre><code class="lang-js">{
    &quot;languageCode&quot;: &quot;en-gb&quot;,                /* Définir la langue principale. */
    &quot;pageNotFound&quot;: &quot;/page-404/&quot;,           /* Assigner une vue dédiée à la page 404. */
    &quot;view&quot;: &quot;common.htm&quot;,             /* Assigner le layout global aux vues. */
    &quot;variation&quot;: &quot;common.json&quot;,       /* Assigner les fichiers de variations communes pour la localisation. */
    &quot;controller&quot;: &quot;common.js&quot;,        /* Assigner les fonctions du contrôleur appelé sur toutes les pages. */
    &quot;postSupport&quot;: false,                   /* Par défaut, empêcher les requêtes de page en POST. */
    &quot;bundles&quot;: &quot;bundles.json&quot;,              /* Définir les fichiers CSS et JS concaténés ensemble et minifiés dans un fichier exterieur. */
    &quot;optimizations&quot;: &quot;optimizations.json&quot;,  /* Définir les images à optimiser pour le web dans un fichier extérieur. */
    &quot;htmlGenerationBeforeResponse&quot;: true,   /* Générer la page couramment affichée dans le dossier &quot;serverless&quot;. */
    &quot;cssBundlingEnable&quot;: true,       /* Minifier les CSS dans des fichiers &quot;.min&quot; avant de renvoyer la page. */
    &quot;jsBundlingEnable&quot;: true,        /* Offusquer les JS dans des fichiers &quot;.min&quot; avant de renvoyer la page. */
    &quot;less&quot;: true,                     /* Utiliser des fichiers Less avec des fichiers &quot;.map&quot; pour la partie développement. */
    &quot;routes&quot;: &quot;route.json&quot;                  /* Définir toutes les urls fournis par le site dans un fichier extérieur. */
}
</code></pre><p><strong>website.prod.json</strong> exemple pour la production :</p><pre><code class="lang-js">{
    &quot;httpPort&quot;: 7777,                       /* Définir le vrai port HTTP pour l&#39;application si le port 80 est déjà écouté. */
    &quot;urlPort&quot;: 80,                          /* Définir le port d&#39;accès pour l&#39;application depuis le net (proxy). */
    &quot;httpSecure&quot;: &quot;security/server&quot;,        /* Définir le répertoire où trouver les fichiers &quot;server.key&quot; et &quot;server.crt&quot; pour le HTTPs. */
    &quot;urlHostname&quot;: &quot;www.my-website.com&quot;,    /* Définir le hostname pour l&#39;application sur le net. */
    &quot;urlRelativeSubPath&quot;: &quot;example&quot;,        /* Définir un sous dossier d&#39;exécution pour l&#39;url de l&#39;application. Par exemple : &quot;https://www.my-website.com/example/&quot;. */
    &quot;languageCode&quot;: &quot;en-gb&quot;,
    &quot;pageNotFound&quot;: &quot;/page-404/&quot;,
    &quot;view&quot;: &quot;common.htm&quot;,
    &quot;variation&quot;: &quot;common.json&quot;,
    &quot;controller&quot;: &quot;common.js&quot;,
    &quot;postSupport&quot;: false,
    &quot;routes&quot;: &quot;route.json&quot;,
}
</code></pre><p><strong>routes.json</strong> example:</p><pre><code class="lang-js">{
    &quot;home&quot;: {                               /* Définir une clé à utiliser comme référence pour manipuler les paramètres définis ou d&#39;url dans le code. */
        &quot;url&quot;: &quot;/&quot;,                         /* Définir l&#39;url d&#39;accès à la page derrière cette route. */
        &quot;output&quot;: &quot;home.html&quot;,              /* Définir le chemin d&#39;accès pour enregistrer le rendu au format HTML de manière statique. */
        &quot;view&quot;: &quot;home.htm&quot;,                 /* Assigner une vue utilisée pour présenter l&#39;information. */
        &quot;variation&quot;: &quot;home.json&quot;,           /* Assigner une variation spécifique utilisée pour localiser la page. */
        &quot;controller&quot;: &quot;home.js&quot;             /* Assigner un contrôleur spécifique utilisé pour la page d&#39;accueil (afficher les derniers articles, le nombre d&#39;inscrit, etc.). */
    },
    &quot;presentation&quot;: {
        &quot;url&quot;: &quot;/presentation/&quot;,
        &quot;output&quot;: &quot;presentation.html&quot;,
        &quot;view&quot;: &quot;default.htm&quot;,              /* Même vue utilisée avec... */
        &quot;variation&quot;: &quot;presentation.json&quot;    /* ...une variation différente pour générer du contenu de page différent (voir &quot;error&quot;). */
    },
    &quot;members&quot;: {
        &quot;url&quot;: &quot;/members/&quot;,
        &quot;output&quot;: &quot;members.html&quot;,
        &quot;view&quot;: &quot;members.htm&quot;,
        &quot;variation&quot;: &quot;members.json&quot;,
        &quot;controller&quot;: &quot;members.js&quot;
    },
    &quot;memberV2&quot;: {                           /* Une nouvelle version de rendu pour les pages &quot;member&quot;. */
        &quot;url&quot;: &quot;/members/:member/&quot;,         /* La partie &quot;:member&quot; représente le membre courrament demandé... */
        &quot;output&quot;: &quot;members/bob.html&quot;,       /* ...et un faux utilisateur est utilisé pour un rendu statique dans le dossier des fichier générés. */
        &quot;view&quot;: &quot;member.htm&quot;,
        &quot;variation&quot;: &quot;member.json&quot;,
        &quot;controller&quot;: &quot;member.js&quot;
    },
    &quot;member&quot;: {                             /* La vieille version de des pages &quot;memberV2&quot;... */
        &quot;url&quot;: &quot;/members-profile/:member/&quot;, /* ...avec une vieille route... */
        &quot;redirect&quot;: &quot;/members/:member/&quot;,    /* ...conservée pour rediriger sur la nouvelle page... */
        &quot;statusCode&quot;: 301                   /* ...de manière permanente. */
    },
    &quot;contact-us&quot;: {
        &quot;url&quot;: &quot;/contact-us/&quot;,
        &quot;output&quot;: &quot;contact-us.html&quot;,
        &quot;view&quot;: &quot;contact-us.htm&quot;,
        &quot;variation&quot;: &quot;contact-us.json&quot;,
        &quot;controller&quot;: &quot;contact-us.js&quot;,
        &quot;postSupport&quot;: true                 /* Permettre d&#39;accéder à la page par demande en POST pour envoyer un email avec un formulaire. */
    },
    &quot;home-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/&quot;,
        &quot;output&quot;: &quot;francais/bienvenue.html&quot;,
        &quot;view&quot;: &quot;home.htm&quot;,
        &quot;variation&quot;: &quot;home.json&quot;,
        &quot;controller&quot;: &quot;home.js&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;             /* Un code de langue spécifique pour cette page. */
    },
    &quot;presentation-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/presentation/&quot;,
        &quot;output&quot;: &quot;francais/presentation.html&quot;,
        &quot;view&quot;: &quot;default.htm&quot;,
        &quot;variation&quot;: &quot;presentation.json&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;
    },
    &quot;members-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/membres/&quot;,
        &quot;output&quot;: &quot;francais/members.html&quot;,
        &quot;view&quot;: &quot;members.htm&quot;,
        &quot;variation&quot;: &quot;members.json&quot;,
        &quot;controller&quot;: &quot;members.js&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;
    },
    &quot;memberV2-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/membres/:member/&quot;,
        &quot;output&quot;: &quot;francais/members/bob.html&quot;,
        &quot;view&quot;: &quot;member.htm&quot;,
        &quot;variation&quot;: &quot;member.json&quot;,
        &quot;controller&quot;: &quot;member.js&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;
    },
    &quot;member-fr-fr&quot;: {
        &quot;url&quot;: &quot;/profile-de-membres/:member/&quot;,
        &quot;redirect&quot;: &quot;/membres/:member/&quot;,
        &quot;statusCode&quot;: 301
    },
    &quot;contact-us-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/contactez-nous/&quot;,
        &quot;output&quot;: &quot;francais/contactez-nous.html&quot;,
        &quot;view&quot;: &quot;contact-us.htm&quot;,
        &quot;variation&quot;: &quot;contact-us.json&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;,
        &quot;controller&quot;: &quot;contact-us.js&quot;,
        &quot;postSupport&quot;: true
    },
    &quot;error-fr-fr&quot;: {
        &quot;url&quot;: &quot;/francais/*&quot;,               /* Toutes les pages commençant par &quot;/francais/&quot; pour la page d&#39;erreur française. */
        &quot;output&quot;: &quot;francais/page-404.html&quot;,
        &quot;view&quot;: &quot;default.htm&quot;,              /* Vue partagée par différentes routes (voir &quot;presentation&quot;). */
        &quot;variation&quot;: &quot;page-404.json&quot;,
        &quot;languageCode&quot;: &quot;fr-fr&quot;,
        &quot;statusCode&quot;: 404                   /* Un status 404 approprié pour les pages d&#39;erreur. */
    },
    &quot;error&quot;: {
        &quot;url&quot;: &quot;/page-404/&quot;,                /* Page d&#39;erreur par défaut défini avec &quot;pageNotFound&quot;. */
        &quot;output&quot;: &quot;page-404.html&quot;,
        &quot;view&quot;: &quot;default.htm&quot;,
        &quot;variation&quot;: &quot;page-404.json&quot;,
        &quot;statusCode&quot;: 404
    }
}
</code></pre><p>autres fichiers...</p><h3 id="-tape-3-cr-ation">Étape 3 - Création</h3><p>Créer des fichiers pour développer votre site !</p><p>Structure de dossier <em>NodeAtlas</em> par défaut:</p><pre><code>my-website/
├─ node_modules/             ⤆ Tous les modules node.js pour votre application.
│  └─ node-atlas/
│     ┊┉
│
├─ assets/                   ⤆ Tous les fichiers publiques peuvent être accédés en HTTP(s) sans route specifique définie.
│  ├─ javascripts/
│  │  ┊┉
│  │
│  ├─ stylesheets/
│  │  ┊┉
│  │
│  ├─ media/
│  │  ┊┉
│  │
│  ┊┉
│
├─ views/                    ⤆ La partie vue avec chaque type de vue pour le rendu.
│  ├─ common.htm
│  ├─ home.htm
│  ├─ default.htm
│  ┊┉
│  └─ partials/              ⤆ Toutes les vues réutilisables.
│     ├─ header.htm
│     ├─ footer.htm
│     ┊┉ 
│
├─ variations/               ⤆ Tous les fichiers pour le remplissage de contenu avec &quot;en-gb&quot; par défaut…
│  ├─ common.json
│  ├─ home.json
│  ┊┉
│  │
│  └─ fr-fr/                 ⤆ …et également le &quot;fr-fr&quot;.
│     ├─ common.json
│     ├─ home.json
│     ┊┉
│
├─ controllers/              ⤆ La partie contrôleur pour manipuler la vue, la variation et les modèles avec les bases de données ou les paramètres d&#39;url.
│  ├─ common.js
│  ├─ home.js
│  ┊┉
│  ├─ modules/               ⤆ Tous les modules internes.
│     ├─ form-contact-us.js
│     ┊┉
│
├─ models/                   ⤆ La partie modèle avec des fichiers de modèle utilisés par les contrôleurs pour remplir les vues.
│  ┊┉
│
├─ serverless/               ⤆ Toutes les maquettes HTML générées et utilisables par les Back-end avec autre chose que Node.js.
│  ┊┉
│
├─ server.js                 ⤆ Fichier utilisé pour faire tourner et configurer NodeAtlas pour une utilisation sous forme d&#39;API.
├─ webconfig.json            ⤆ Fichier utilisé pour faire tourner le site sur localhost pour le développement.
├─ webconfig.prod.json       ⤆ Fichier utilisé pour faire tourner le site sur le net pour la production.
├─ routes.json               ⤆ Fichier utilisé par &quot;webconfig.json&quot; et &quot;webconfig.prod.json&quot; pour définir les routes.
┊┉
├─ webconfig.prod.en-gb.json ⤆ Fichier exemple utilisé pour faire tourner uniquement les routes &quot;en-gb&quot; sur un port…
├─ routes.en-gb.json         ⤆ …avec le fichier de route anglais…
├─ webconfig.prod.fr-fr.json ⤆ …et faire tourner les routes &quot;fr-fr&quot; sur un autre port…
├─ routes.fr-fr.json         ⤆ …avec le fichier de route français.
┊┉
</code></pre><p>Étape 4 - Lancement ! ###</p><p>Lancer <em>NodeAtlas</em> depuis le dossier &quot;my-website&quot; dans votre environnement de développement :</p><ul>
<li>avec un fichier <code>server.js</code>:</li>
</ul><pre><code>node server.js
</code></pre><ul>
<li>with CLI command:</li>
</ul><pre><code>node-atlas
</code></pre><ul>
<li>pour générer les assets :</li>
</ul><pre><code>nodea-tlas --generate
</code></pre><p>Lancer <em>NodeAtlas</em> dans votre environnement de production :</p><ul>
<li>en standard:</li>
</ul><pre><code>node-atlas --path /var/www/my-website/ --webconfig webconfig.prod.json
</code></pre><ul>
<li>avec <em>Forever</em>:</li>
</ul><pre><code>forever start /usr/local/lib/node_modules/node-atlas/ --path /var/www/my-website/ --webconfig webconfig.prod.json
</code></pre>